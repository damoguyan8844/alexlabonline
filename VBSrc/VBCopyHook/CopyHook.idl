[
uuid(f4e74040-2A82-401B-1381-11AA003743D3),
helpstring("ShellObject Library"),
version(1.0)
]


library ShellObjects
{

    importlib("stdole2.tlb");

	typedef enum{
		FILE_ATTRIBUTE_READONLY             =0x00000001,
		FILE_ATTRIBUTE_HIDDEN               =0x00000002,  
		FILE_ATTRIBUTE_SYSTEM               =0x00000004,  
		FILE_ATTRIBUTE_DIRECTORY            =0x00000010,  
		FILE_ATTRIBUTE_ARCHIVE              =0x00000020,  
		FILE_ATTRIBUTE_ENCRYPTED            =0x00000040,  
		FILE_ATTRIBUTE_NORMAL               =0x00000080,  
		FILE_ATTRIBUTE_TEMPORARY            =0x00000100,  
		FILE_ATTRIBUTE_SPARSE_FILE          =0x00000200,  
		FILE_ATTRIBUTE_REPARSE_POINT        =0x00000400,  
		FILE_ATTRIBUTE_COMPRESSED           =0x00000800,  
		FILE_ATTRIBUTE_OFFLINE              =0x00001000,  
		FILE_ATTRIBUTE_NOT_CONTENT_INDEXED  =0x00002000  
	}eFileAttributes;

	typedef enum{
		FO_MOVE				=0x0001,
		FO_COPY				=0x0002,
		FO_DELETE			=0x0003,
		FO_RENAME			=0x0004,
		PO_DELETE			=0x0013,  // printer is being deleted
		PO_RENAME			=0x0014,  // printer is being renamed
		PO_PORTCHANGE		=0x0020,  // port this printer connected to is being changed
                                // if this id is set, the strings received by
                                // the copyhook are a doubly-null terminated
                                // list of strings.  The first is the printer
                                // name and the second is the printer port.
		PO_REN_PORT			=0x0034  // PO_RENAME and PO_PORTCHANGE at same time.

	}eOperationType;

	typedef enum{
		FOF_MULTIDESTFILES         =0x0001,
		FOF_CONFIRMMOUSE           =0x0002,
		FOF_SILENT                 =0x0004,  // don't create progress/report
		FOF_RENAMEONCOLLISION      =0x0008,
		FOF_NOCONFIRMATION         =0x0010,  // Don't prompt the user.
		FOF_WANTMAPPINGHANDLE      =0x0020,  // Fill in SHFILEOPSTRUCT.hNameMappings
											  // Must be freed using SHFreeNameMappings
		FOF_ALLOWUNDO              =0x0040,
		FOF_FILESONLY              =0x0080,  // on *.*, do only files
		FOF_SIMPLEPROGRESS         =0x0100,  // means don't show names of files
		FOF_NOCONFIRMMKDIR         =0x0200,  // don't confirm making any needed dirs
		FOF_NOERRORUI              =0x0400,  // don't put up error UI
		FOF_NOCOPYSECURITYATTRIBS  =0x0800  // dont copy NT file Security Attributes
	}eOperationFlags;

    [
        uuid(000214EF-0000-0000-C000-000000000046),
        helpstring("ICopyHookA Interface"),
        odl
    ]
    interface ICopyHookA : IUnknown
    {
        HRESULT CopyCallback([in] long hwnd,
                             [in] long wFunc,
                             [in] long wFlags,
                             [in] long pszSrcFile,
                             [in] long dwSrcAttribs,
                             [in] long pszDestFile,
                             [in] long dwDestAttribs);
    }

    [
        uuid(000214FC-0000-0000-C000-000000000046),
        helpstring("ICopyHookW Interface"),
        odl
    ]
    interface ICopyHookW : IUnknown
    {
        HRESULT CopyCallback([in] long hwnd,
                             [in] long wFunc,
                             [in] long wFlags,
                             [in] long pszSrcFile,
                             [in] long dwSrcAttribs,
                             [in] long pszDestFile,
                             [in] long dwDestAttribs);
    }
};
