uses
  SysUtils,Classes,WideStrings,Controls,StdCtrls,Dialogs,Variants,DB,ADODB,GridsEh,
Forms,DBGridEh,DBAccess,Uni,MemDS,NativeXml,ComCtrls;

type
  //导出的显示窗口
  TExportForm = class(TForm)
    ProgressBar1: TProgressBar; 
    Button1: TButton;
    UniTable1: TUniTable; 
    Lb: TLabel;   
    procedure DoButton1Click(Sender: TObject);  
  private  
    xml: TNativexml;//使用Nativexml来构建xml
  public
    Constructor Create(AOwner: TComponent);override;   
  end;  

  Constructor TExportForm.Create(AOwner: TComponent);override;
  begin            
    inherited;
    Width := 320;
    Height := 80;  
    //创建标签显示进度信息 
    Lb := TLabel.Create(self);
    Lb.Parent := self;     
    Lb.Align := altop;    
    Lb.caption := '';
    //创建进度条
    ProgressBar1 := TProgressBar.Create(self);         
    ProgressBar1.Parent := self;                  
    ProgressBar1.left := 10;    
    ProgressBar1.Top := 18;    
    ProgressBar1.width := 210; 
                                        
    //创建用来导出到xml的按钮
    Button1 := TButton.Create(self);
    Button1.parent := self;    
    Button1.Caption := '导出到xml';
    Button1.left := 225;       
    Button1.Top := 10;
    Button1.Parent := self;
    Button1.width := 90;
    Button1.OnClick := DoButton1Click; //指定按钮事件     
    UniTable1 := TUniTable.Create(self);
    UniTable1.Connection := CurSqlDb.Connection;
    UniTable1.TableName := 'AreaInfo';
    UniTable1.Open;
    UniTable1.Last;     
  end;  

  procedure TExportForm.DoButton1Click(Sender: TObject);
  var
    xml: TNativexml;    
    xNode: TxmlNode;                                   
    i: integer;
  begin          
     with TSaveDialog.Create(self) do
     begin 
       Filter := 'xml File|*.xml';
       Title := '导出到xml';       
       Lb.Caption := '开始导出数据';     
       ProgressBar1.Max := UniTable1.RecordCount;        
       if Execute And (FileName <> '') then
       begin        
         xml := TNativexml.createName(UniTable1.TableName);         
         XMl.EncodingString := 'gbk';
         if UniTable1.Active then     
           UniTable1.First
         else
         begin     
           ShowMessage(FileName);           
           exit;           
         end;
         while not UniTable1.Eof do     
         begin          
           xNode := xml.root.nodeNew('DataRecord');             
           for i := 0 to UniTable1.FieldCount - 1 do
           begin     //根据不同的数据类型写入不同的数据信息      
             case UniTable1.Fields[i].DataType of             
             ftWideString,ftMemo,ftString,ftDateTime,ftTime:             
               xNode.WriteAttributeString(UniTable1.Fields[i].FieldName,UniTable1.Fields[i].AsString);               
             ftSmallint,ftWord,ftInteger: 
               xNode.WriteAttributeInteger(UniTable1.Fields[i].FieldName,UniTable1.Fields[i].AsInteger);
             ftBoolean: 
               xNode.WriteAttributeBool(UniTable1.Fields[i].FieldName,UniTable1.Fields[i].AsBoolean);
             ftFloat,ftCurrency: 
               xNode.WriteAttributeFloat(UniTable1.Fields[i].FieldName,UniTable1.Fields[i].AsFloat);               
             else             
               xNode.WriteAttributeString(UniTable1.Fields[i].FieldName,'Binary');
             end; 
           end;                 
           UniTable1.Next;                            
           ProgressBar1.position := ProgressBar1.position + 1;
           Lb.Caption := inttostr(ProgressBar1.Position) + '/'+inttostr(ProgressBar1.Max);         
           ProcessMessage;//刷新界面，就是application.processmessages              
         end;     
         ShowMessage('数据导出成功！');                  
         xml.SaveToFile(FileName);
       end;           
       Free;
     end;          
  end;  

var
  ExportForm: TExportForm;
begin 
  ExportForm := TExPortForm.Create(nil);
  ExportForm.ShowModal;
  ExPortForm.Free;  
end.